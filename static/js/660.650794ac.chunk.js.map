{"version":3,"file":"static/js/660.650794ac.chunk.js","mappings":"yOAEMA,EAAW,gCACXC,EAAU,2CAEhB,aAAO,OAAP,oBAAO,WAA8BC,GAA9B,gFACCC,EADD,UACUH,EADV,iBAC2BE,EAD3B,YACiCD,GADjC,SAEkBG,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAIEA,EAASC,MAJX,kE,kCCJP,EAA4B,6BAA5B,EAAiG,0BAAjG,EAAqI,2BAArI,EAAyK,0BAAzK,EAA0M,wBAA1M,EAA+O,8B,0DCMlOC,EAAY,SAAC,GAAe,IAAD,IAAZC,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEhD,OACE,4BACE,iBAAKC,UAAWC,EAAhB,WACE,SAAC,EAAAC,KAAD,CAAMC,GAAIP,EAASQ,QAAnB,UACE,SAAC,MAAD,OAEF,gBACEC,IACEZ,EAAMa,YAAN,yCACsCb,EAAMa,aACxCC,EAENC,IAAKf,EAAMgB,eACXC,MAAM,MACNC,OAAO,SAET,4BACE,wBAAKlB,EAAMgB,gBAAkBhB,EAAMmB,SACnC,8BAAMnB,EAAMoB,aAAZ,QACA,yCAAiBpB,EAAMqB,iBACvB,cAAGd,UAAWC,EAAd,SAA2BR,EAAMsB,YACjC,iBAAKf,UAAWC,EAAhB,WACE,oCACCR,EAAMuB,OAAOC,KAAI,SAAAC,GAChB,OACE,cAAkBlB,UAAWC,EAA7B,SACGiB,EAAMC,MADDD,EAAM/B,GAIjB,cAIP,gBAAKa,UAAWC,EAAhB,UACE,2BACE,8CACA,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAG,OAAOH,UAAWC,EAA3B,qBAIF,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAG,SAASH,UAAWC,EAA7B,8BAQX,EAEDT,EAAU4B,UAAY,CACpB3B,MAAO4B,IAAAA,MAAgB,CACrBf,YAAae,IAAAA,OAAAA,WACbZ,eAAgBY,IAAAA,OAAAA,WAChBT,MAAOS,IAAAA,OAAAA,WACPR,aAAcQ,IAAAA,OAAAA,WACdP,aAAcO,IAAAA,OAAAA,WACdL,OAAQK,IAAAA,QACNA,IAAAA,MAAgB,CACdlC,GAAIkC,IAAAA,OAAAA,WACJF,KAAME,IAAAA,OAAAA,aACLC,YACHA,aACDA,YCtEL,IAkBA,EAlBkB,WAChB,IAAQnC,GAAOoC,EAAAA,EAAAA,MAAPpC,GACR,GAA0BqC,EAAAA,EAAAA,UAAS,MAAnC,eAAO/B,EAAP,KAAcgC,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YHLL,SAAP,mCGMIC,CAAexC,GAAIyC,MAAK,SAAAtC,GAAQ,OAAImC,EAASnC,EAAb,GACjC,GAAE,CAACH,KAGF,4BACGM,IAAS,SAACD,EAAD,CAAWC,MAAOA,KAC5B,SAAC,EAAAoC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/API/FetchMovieById.js","webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","pages/MoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst ENDPOINT = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=88faaf442f455e4d8446047507fe6e6c';\n\nexport async function fetchMovieById(id) {\n  const URL = `${ENDPOINT}movie/${id}?${API_KEY}`;\n  const response = await axios.get(URL);\n\n  return response.data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieCard_container__4KN1P\",\"info\":\"MovieCard_info__QTHMi\",\"review\":\"MovieCard_review__nrocI\",\"wrapper\":\"MovieCard_wrapper__UNKq4\",\"genres\":\"MovieCard_genres__EDNHv\",\"more\":\"MovieCard_more__fHwwr\",\"additional\":\"MovieCard_additional__0E6if\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MovieCard.module.css';\nimport { useRef } from 'react';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport propTypes from 'prop-types';\nimport poster from '../../images/movie-clip-art-28.png';\n\nexport const MovieCard = ({ movie }) => {\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  return (\n    <div>\n      <div className={css.container}>\n        <Link to={backLink.current}>\n          <FaArrowLeft />\n        </Link>\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n              : poster\n          }\n          alt={movie.original_title}\n          width=\"300\"\n          height=\"450\"\n        />\n        <div>\n          <h2>{movie.original_title || movie.title}</h2>\n          <h3>({movie.release_date})</h3>\n          <h3>User Score: {movie.vote_average}</h3>\n          <p className={css.review}>{movie.overview}</p>\n          <div className={css.wrapper}>\n            <h3>Genres:</h3>\n            {movie.genres.map(genre => {\n              return (\n                <p key={genre.id} className={css.genres}>\n                  {genre.name}\n                </p>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      <div className={css.additional}>\n        <ul>\n          <h3>Additional info:</h3>\n          <li>\n            <Link to=\"cast\" className={css.more}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"review\" className={css.more}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nMovieCard.prototype = {\n  movie: propTypes.shape({\n    poster_path: propTypes.string.isRequired,\n    original_title: propTypes.string.isRequired,\n    title: propTypes.string.isRequired,\n    release_date: propTypes.string.isRequired,\n    vote_average: propTypes.number.isRequired,\n    genres: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number.isRequired,\n        name: propTypes.string.isRequired,\n      }).isRequired\n    ).isRequired,\n  }).isRequired,\n};\n","import { fetchMovieById } from 'components/API/FetchMovieById';\nimport Loader from 'components/Loader/Loader';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\n\nconst MoviePage = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchMovieById(id).then(response => setMovie(response));\n  }, [id]);\n\n  return (\n    <main>\n      {movie && <MovieCard movie={movie} />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MoviePage;\n"],"names":["ENDPOINT","API_KEY","id","URL","axios","response","data","MovieCard","movie","location","useLocation","backLink","useRef","state","from","className","css","Link","to","current","src","poster_path","poster","alt","original_title","width","height","title","release_date","vote_average","overview","genres","map","genre","name","prototype","propTypes","isRequired","useParams","useState","setMovie","useEffect","fetchMovieById","then","Suspense","fallback","Loader"],"sourceRoot":""}