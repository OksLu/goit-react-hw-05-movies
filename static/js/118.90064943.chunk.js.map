{"version":3,"file":"static/js/118.90064943.chunk.js","mappings":"kLACA,EAAuB,yBAAvB,EAAuD,yBAAvD,EAAwF,0B,iCCIlFA,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC5B,OACE,eAAIC,UAAWC,EAAf,SACGH,GACCA,EAAOI,KAAI,SAAAC,GACT,OACE,eAAkBH,UAAWC,EAA7B,UACE,UAAC,EAAAG,KAAD,CAAMC,GAAE,kBAAaF,EAAKG,IAAMC,MAAO,CAAEC,KAAMT,GAA/C,WACE,gBACEU,IACEN,EAAKO,YAAL,yCACsCP,EAAKO,aACvCC,EAENC,IAAKT,EAAKU,OAASV,EAAKW,KACxBC,MAAM,MACNC,OAAO,SAET,eAAIhB,UAAWC,EAAf,SAA2BE,EAAKU,OAASV,EAAKW,WAZzCX,EAAKG,GAgBjB,KAGR,EAEDT,EAAWoB,UAAY,CACrBnB,OAAQoB,IAAAA,MAAgB,CACtBZ,GAAIY,IAAAA,OAAAA,WACJR,YAAaQ,IAAAA,OAAAA,WACbC,eAAgBD,IAAAA,OAAAA,WAChBL,MAAOK,IAAAA,OAAAA,aACNE,YAGL,O,iICvCMC,EAAW,gCACXC,EAAU,2CAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EADD,UACUH,EADV,4BACsCC,GADtC,SAEkBG,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAIEA,EAASC,KAAKC,SAJhB,kE,+BCFP,EAAgCC,EAAQ,KAAhCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAoBnB,EAlBa,WACX,MAA4BA,EAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMlC,GAAWmC,EAAAA,EAAAA,MAajB,OAXAJ,GAAU,WACR,IAAMK,EAAU,mCAAG,6GAEOZ,IAFP,OAETK,EAFS,OAGfK,EAAUL,GAHK,gDAKfQ,QAAQC,IAAR,MALe,yDAAH,qDAQhBF,GACD,GAAE,KACI,SAACtC,EAAA,EAAD,CAAYC,OAAQkC,EAAQjC,SAAUA,GAC9C,C,mCCZD,IAAIuC,EAAuBT,EAAQ,IAEnC,SAASU,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAehD,EAAUiD,EAAcC,GACpE,GAAIA,IAAWX,EAAf,CAIA,IAAIY,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIpC,KAAO,sBACLoC,CAPL,CAQF,CAED,SAASE,IACP,OAAOR,CACR,CAHDA,EAAKxB,WAAawB,EAMlB,IAAIS,EAAiB,CACnBC,MAAOV,EACPW,OAAQX,EACRY,KAAMZ,EACNa,KAAMb,EACNc,OAAQd,EACRe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EAERkB,IAAKlB,EACLmB,QAASX,EACTY,QAASpB,EACTqB,YAAarB,EACbsB,WAAYd,EACZe,KAAMvB,EACNwB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBjC,EAChBC,kBAAmBF,GAKrB,OAFAc,EAAeqB,UAAYrB,EAEpBA,CACR,C,oBC/CCX,EAAOC,QAAUd,EAAQ,IAARA,E,8BCNnBa,EAAOC,QAFoB,8C","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/API/FetchTrending.js","pages/Home.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\",\"title\":\"MoviesList_title__PB2c8\"};","import { Link } from 'react-router-dom';\nimport css from './MoviesList.module.css';\nimport propTypes from 'prop-types';\nimport poster from '../../images/poster.jpg';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <ul className={css.list}>\n      {movies &&\n        movies.map(item => {\n          return (\n            <li key={item.id} className={css.item}>\n              <Link to={`/movies/${item.id}`} state={{ from: location }}>\n                <img\n                  src={\n                    item.poster_path\n                      ? `https://image.tmdb.org/t/p/w300${item.poster_path}`\n                      : poster\n                  }\n                  alt={item.title || item.name}\n                  width=\"300\"\n                  height=\"450\"\n                />\n                <h2 className={css.title}>{item.title || item.name}</h2>\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nMoviesList.prototype = {\n  movies: propTypes.shape({\n    id: propTypes.number.isRequired,\n    poster_path: propTypes.string.isRequired,\n    original_title: propTypes.string.isRequired,\n    title: propTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\nconst ENDPOINT = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=88faaf442f455e4d8446047507fe6e6c';\n\nexport async function fetchTrending() {\n  const URL = `${ENDPOINT}trending/all/day?${API_KEY}`;\n  const response = await axios.get(URL);\n\n  return response.data.results;\n}\n","import { fetchTrending } from 'components/API/FetchTrending';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useLocation } from 'react-router-dom';\nconst { useEffect, useState } = require('react');\n\nconst Home = () => {\n  const [trends, setTrends] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const loadTrends = async () => {\n      try {\n        const results = await fetchTrending();\n        setTrends(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    loadTrends();\n  }, []);\n  return <MoviesList movies={trends} location={location} />;\n};\n\nexport default Home;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["MoviesList","movies","location","className","css","map","item","Link","to","id","state","from","src","poster_path","poster","alt","title","name","width","height","prototype","propTypes","original_title","isRequired","ENDPOINT","API_KEY","fetchTrending","URL","axios","response","data","results","require","useEffect","useState","trends","setTrends","useLocation","loadTrends","console","log","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}